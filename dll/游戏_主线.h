#pragma once
#include "pch.h"
bool ID是否已存在(DWORD ID, vector<DWORD>& ID组);
void 加入暂时不打ID_数字(DWORD ID);
extern DWORD 任务流程;
class 游戏
{
public:
	static bool Pass各种窗口();
	static bool 主线_序章(QuestInfo_ 主线任务);
	static void 主线_莱文哈特罗格尔(QuestInfo_ 主线任务);
	static void 主线_安格莫斯山麓(QuestInfo_ 主线任务);
	static void 主线_国境地带(QuestInfo_ 主线任务);
	static void 主线_萨尔兰德丘陵(QuestInfo_ 主线任务);
	static void 主线_奥兹霍丘陵(QuestInfo_ 主线任务);
	static void 主线_扎格拉斯山(QuestInfo_ 主线任务);
	static void 主线_雷科巴(QuestInfo_ 主线任务);
	static void 主线_梅德里克修道院(QuestInfo_ 主线任务);
	static void 主线_比尔布森林(QuestInfo_ 主线任务);
	static void 主线_激战平原(QuestInfo_ 主线任务);
	static void 主线_卢特兰城(QuestInfo_ 主线任务);
	static void 主线_迪奥利卡平原(QuestInfo_ 主线任务);
	static void 主线_圆虹之丘(QuestInfo_ 主线任务);
	static void 主线_梨树栖息地(QuestInfo_ 主线任务);
	static void 主线_黑玫瑰教堂(QuestInfo_ 主线任务);
	static void 主线_拉伊亚阶地(QuestInfo_ 主线任务);
	static void 主线_博伦亚领地(QuestInfo_ 主线任务);
	static void 主线_鬃波港(QuestInfo_ 主线任务);
	static void 主线_科罗克尼斯渔村(QuestInfo_ 主线任务);
	static bool 支线_莱温哈特(vector<DWORD>& vsk);
	static bool 支线_罗格尔(vector<DWORD>& vsk);
	static bool 支线_安格莫斯山麓(vector<DWORD>& vsk);
	static bool 支线_国境地带(vector<DWORD>& vsk);
	static bool 支线_萨尔兰德丘陵(vector<DWORD>& vsk);
	static bool 支线_奥兹霍丘陵(vector<DWORD>& vsk);
	static bool 支线_扎格拉斯山(vector<DWORD>& vsk);
	static bool 支线_雷科巴(vector<DWORD>& vsk);
	static bool 支线_梅德里克修道院(vector<DWORD>& vsk);
	static bool 支线_比尔布森林(vector<DWORD>& vsk);
	static bool 支线_激战平原(vector<DWORD>& vsk);
	static bool 支线_卢特兰城(vector<DWORD>& vsk);
	static bool 支线_迪奥利卡平原(vector<DWORD>& vsk);
	static bool 支线_圆虹之丘(vector<DWORD>& vsk);
	static bool 支线_梨树栖息地(vector<DWORD>& vsk);
	static bool 支线_黑玫瑰教堂(vector<DWORD>& vsk);
	static bool 支线_拉伊亚阶地(vector<DWORD>& vsk);
	static bool 支线_博伦亚领地(vector<DWORD>& vsk);
	static bool 支线_鬃波港(vector<DWORD>& vsk);
	static bool 支线_科罗克尼斯渔村(vector<DWORD>& vsk);
	static bool 支线_世界1(vector<DWORD>& vsk);
	static bool 支线_世界2(vector<DWORD>& vsk);
	static bool 支线_世界3(vector<DWORD>& vsk);
	static bool 支线_世界4(vector<DWORD>& vsk);
	static bool 支线_世界5(vector<DWORD>& vsk);
	static bool 支线_世界6(vector<DWORD>& vsk);
	static bool 支线_世界7(vector<DWORD>& vsk);
	static bool 支线_世界8(vector<DWORD>& vsk);
	static bool 支线_世界9(vector<DWORD>& vsk);
	static bool 执行触发任务();
	static bool 执行副本任务();
	static bool 执行支线任务();
	static bool 世界1(QuestInfo_ 必做引导任务);
	static bool 世界2(QuestInfo_ 主线任务);
	static bool 世界3(QuestInfo_ 主线任务);
	static bool 世界4(QuestInfo_ 主线任务);
	static bool 世界5(QuestInfo_ 主线任务);
	static bool 世界6(QuestInfo_ 主线任务);
	static bool 世界7(QuestInfo_ 主线任务);
	static bool 世界8(QuestInfo_ 主线任务);
	static bool 世界9(QuestInfo_ 主线任务);
	static bool 执行世界任务();
	//static bool 执行必做引导任务();
	static bool 执行指引任务();
	static bool 执行紫色任务();
};

class 功能
{
public:

	static void 打怪程序(INT64 怪物obj);
	static void 打怪程序2(INT64 怪物obj, 坐标_ 固定坐标, objInfo_ 参_开关信息);
	static void 破坏击打道具程序(INT64 怪物obj, DWORD dResId);
	static bool 拾取道具(int 打怪范围);
	static void 拾取(int 打怪范围);
	static bool 拾取道具1(int 打怪范围);
	static bool 优先打怪(int 打怪范围);
	static bool 优先破坏击打道具(int 打怪范围);
	static bool 获取寻路分段坐标组(DWORD 地图ID, float x, float y, float z, vector<录制坐标_>& 返回路径分段坐标组);
	static bool 移动打怪(float x, float y, float z, int 到达范围, int 打怪范围, int 距离自身范围 = 60, bool 优先清理击打道具 = false, int 击打道具距离自身距离 = 0);
	static bool 自动购买装备药水();
	static bool 签到领取邮件奖励();
	static bool 开启传送点();
	static void 寻路到指定传送门(float x, float y, float z, DWORD 传送门ID, int 攻击范围);
	static void 寻路到副本(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z);
	static void 到指定地点按G(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 对话范围, int 打怪范围 = 100);
	static void 到指定地点按G_无打怪(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 对话范围);
	static void 到指定地点乘坐电梯(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 对话范围, DWORD 电梯ResId);
	static void 到指定地点破坏击打道具(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 采集范围, int 采集目标ID, int 打怪范围);
	static void 到指定地点采集(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 采集范围, int 采集目标ID, int 打怪范围 = 100, int 按G范围 = 100);
	static void 到指定地点采集任务显示(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 采集范围, int 采集目标ID, int 打怪范围 = 100, int 按G范围 = 100, bool 不打怪 = false);
	static void 到指定地点采集任务显示_多目标(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 采集范围, int 采集目标ID, int 采集目标ID2, int 打怪范围 = 100, int 按G范围 = 100, bool 不打怪 = false);
	//static void 到指定地点采集(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 采集范围);
	//static void 到指定地点按G(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 对话范围, int 地图分段);
	static void 到指定地点打开NPC(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 对话范围, DWORD NpcResId);
	static bool 到指定地点(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 到达范围, bool 不打怪 = false);
	static bool 到指定地点入港(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 到达范围);
	static int 前往指定分段(节点处理_ 节点信息, DWORD 目标分段, 坐标_ 目标坐标, DWORD 操作);
	static void 跨地图ID处理(DWORD 目标地图ID);
	static void 到指定地点找NPC交任务(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, CString NpcName, DWORD 任务ID, DWORD 奖励, int 对话范围, int 地图分段 = 1);
	static void 到指定地点找NPC交任务2(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, DWORD NPCResId, DWORD 任务ID, DWORD 奖励, int 对话范围, int 对话分支 = 0);
	static void 到指定地点找NPC交任务3(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, DWORD NPCResId, DWORD 任务ID, DWORD 奖励, int 对话范围, int 任务阶段);
	static void 到指定地点找NPC接任务(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, CString NpcName, DWORD 任务ID, int 对话范围, int 地图分段 = 1);
	static void 到指定地点找NPC接任务2(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, DWORD NPCResId, DWORD 任务ID, int 对话范围, int 地图分段 = 1);
	static void 诞生石任务(DWORD 地图ID, float x, float y, float z, DWORD NPCResId, int 对话范围);
	static void 到指定地点找NPC修理装备(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, DWORD 对话范围, DWORD NPCResId);
	static void 到指定地点找NPC买物品(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, DWORD NPCResId, int 对话范围, DWORD itemResID, DWORD 数量);
	static void 到指定地点对怪物使用F5(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 范围, DWORD 怪物ID);
	static void 到指定地点使用指定按键(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 范围, DWORD 按键);
	static void 到指定地点使用表情(DWORD 大陆ID, DWORD 地图ID, float x, float y, float z, int 范围, DWORD 表情ID);
	static void 自动主线和NPC对话(int 对话范围, int 地图分段 = 1);
	static bool 范围内是否警备兵(float x, float y, float z, int 范围, DWORD 怪物ID);
	static int 返回表情编号(CString 表情);
};
void 前往分段处理坐标(float x, float y, float z);
bool 清理击打道具(float x, float y, float z, int 距离自身范围, int 打怪范围);